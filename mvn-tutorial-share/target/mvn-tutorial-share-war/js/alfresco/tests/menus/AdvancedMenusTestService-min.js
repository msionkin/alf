define(["dojo/_base/declare","alfresco/tests/CommonTestService","doh/runner","dojo/robot","dojo/keys","dijit/registry","dojo/query","dojo/dom-attr","dojo/dom-style","dojo/_base/array","alfresco/menus/AlfMenuGroup","dojo/domReady!"],function(c,b,g,j,k,a,i,h,d,f,e){return c(b,{constructor:function(){g.register("Menu tests",[{name:"Test setup",timeout:2000,runTest:this.testSetup,scope:this},{name:"Test Simple Checkable Menu Items",timeout:40000,runTest:this.testSimpleCheckableMenuItems,scope:this},{name:"Test Simple Checkable Menu Item Events",timeout:40000,runTest:this.testSimpleCheckableMenuItemEvents,scope:this},{name:"Test Grouped Checkable Menu Items",timeout:40000,runTest:this.testGroupedCheckableMenuItems,scope:this},{name:"Test Menu Bar Select",timeout:40000,runTest:this.testSelectMenuBarItems,scope:this},{name:"Test Menu Bar Toggles",timeout:40000,runTest:this.testMenuBarToggle,scope:this}]);g.run()},testSetup:function(l){this.scope.findTestObjects(["MENU_BAR_POPUP1","SIMPLE_CHECKABLE_1","SIMPLE_CHECKABLE_2","GROUPED_CHECKABLE_1","GROUPED_CHECKABLE_2","GROUPED_CHECKABLE_3","MENU_BAR_SELECT","SELECT_MENU_ITEM_1","SELECT_MENU_ITEM_2","MENU_BAR_SELECT_VALUE","SELECT_MENU_ITEM_3","SELECT_MENU_ITEM_4","MENU_BAR_TOGGLE_CUSTOM_LABEL","MENU_BAR_TOGGLE_WITH_ICON"])},testSimpleCheckableMenuItems:function(l){var m=new l.Deferred();var n=this;this.scope.checkableItems=[];this.scope.alfSubscribe("SIMPLE_CHECKABLE1",function(o){n.scope.alfLog("log","Received checkable item event",o);n.scope.checkableItems.push({value:o.value,selected:o.selected});n.scope.alfLog("log","Results: ",n.scope.checkableItems)});this.scope.alfSubscribe("SIMPLE_CHECKABLE2",function(o){n.scope.alfLog("log","Received checkable item event",o);n.scope.checkableItems.push({value:o.value,selected:o.selected});n.scope.alfLog("log","Results: ",n.scope.checkableItems)});j.keyPress(k.TAB,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.SPACE,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.SPACE,200);j.mouseMoveAt(this.scope.testObjects.MENU_BAR_POPUP1.domNode,200);j.mouseClick({left:true},200);j.mouseMoveAt(this.scope.testObjects.SIMPLE_CHECKABLE_1.domNode,200);j.mouseClick({left:true},200);j.mouseMoveAt(this.scope.testObjects.MENU_BAR_POPUP1.domNode,200);j.mouseClick({left:true},200);j.mouseMoveAt(this.scope.testObjects.SIMPLE_CHECKABLE_2.domNode,200);j.mouseClick({left:true},200);j.sequence(m.getTestCallback(function(){var o=[{value:"OP1",selected:true},{value:"OP2",selected:true},{value:"OP1",selected:false},{value:"OP2",selected:false}];l.assertEqual(o.length,n.scope.checkableItems.length,"The number of checkable menu items events did not match expectations");n.scope.alfLog("log","Results: ",n.scope.checkableItems);f.forEach(o,function(q,p){n.scope.alfLog("log","Expected: ",q," Actual: ",n.scope.checkableItems[p]);l.assertEqual(q.value,n.scope.checkableItems[p].value,"Unexpected checkable menu value");l.assertEqual(q.selected,n.scope.checkableItems[p].selected,"Unexpected checkable menu selection")})}),900);return m},testSimpleCheckableMenuItemEvents:function(l){this.scope.alfPublish("SIMPLE_CHECKABLE1",{selected:true});l.assertTrue(this.scope.testObjects.SIMPLE_CHECKABLE_1.checked);this.scope.alfPublish("SIMPLE_CHECKABLE1",{selected:false});l.assertFalse(this.scope.testObjects.SIMPLE_CHECKABLE_1.checked)},testGroupedCheckableMenuItems:function(l){var m=new l.Deferred();var n=this;this.scope.checkableItems=[];this.scope.alfSubscribe("GROUPED_CHECKABLE",function(o){n.scope.alfLog("log","Received checkable item event",o);n.scope.checkableItems.push({value:o.value,selected:o.selected});n.scope.alfLog("log","Results: ",n.scope.checkableItems)});j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.SPACE,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.SPACE,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.SPACE,200);j.mouseMoveAt(this.scope.testObjects.MENU_BAR_POPUP1.domNode,200);j.mouseClick({left:true},200);j.mouseMoveAt(this.scope.testObjects.GROUPED_CHECKABLE_2.domNode,200);j.mouseClick({left:true},200);j.mouseMoveAt(this.scope.testObjects.MENU_BAR_POPUP1.domNode,200);j.mouseClick({left:true},200);j.mouseMoveAt(this.scope.testObjects.GROUPED_CHECKABLE_1.domNode,200);j.mouseClick({left:true},200);j.mouseMoveAt(this.scope.testObjects.MENU_BAR_POPUP1.domNode,200);j.mouseClick({left:true},200);j.mouseMoveAt(this.scope.testObjects.GROUPED_CHECKABLE_3.domNode,200);j.mouseClick({left:true},200);j.sequence(m.getTestCallback(function(){var o=[{value:"CHECKED_OP1",selected:true},{value:"CHECKED_OP2",selected:true},{value:"CHECKED_OP3",selected:true},{value:"CHECKED_OP2",selected:true},{value:"CHECKED_OP1",selected:true},{value:"CHECKED_OP3",selected:true}];l.assertEqual(o.length,n.scope.checkableItems.length,"The number of checkable menu items events did not match expectations");n.scope.alfLog("log","Results: ",n.scope.checkableItems);f.forEach(o,function(q,p){n.scope.alfLog("log","Expected: ",q," Actual: ",n.scope.checkableItems[p]);l.assertEqual(q.value,n.scope.checkableItems[p].value,"Unexpected checkable menu value");l.assertEqual(q.selected,n.scope.checkableItems[p].selected,"Unexpected checkable menu selection")});l.assertFalse(n.scope.testObjects.GROUPED_CHECKABLE_1.checked);l.assertFalse(n.scope.testObjects.GROUPED_CHECKABLE_2.checked);n.scope.alfPublish("GROUPED_CHECKABLE",{value:"CHECKED_OP1",selected:true});l.assertFalse(n.scope.testObjects.GROUPED_CHECKABLE_2.checked);l.assertFalse(n.scope.testObjects.GROUPED_CHECKABLE_3.checked)}),900);return m},testSelectMenuBarItems:function(l){var m=new l.Deferred();var n=this;this.scope.checkableItems=[];this.scope.alfSubscribe("MENU_BAR_SELECT",function(o){n.scope.alfLog("log","Received menu bar select item event",o);n.scope.checkableItems.push({label:o.label})});j.keyPress(k.RIGHT_ARROW,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.SPACE,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.DOWN_ARROW,200);j.keyPress(k.SPACE,200);j.mouseMoveAt(this.scope.testObjects.MENU_BAR_SELECT_VALUE.domNode,200);j.mouseClick({left:true},200);j.mouseMoveAt(this.scope.testObjects.SELECT_MENU_ITEM_3.domNode,200);j.mouseClick({left:true},200);j.sequence(m.getTestCallback(function(){var o=[{label:"menu2.item1.label"},{label:"menu2.item2.label"}];l.assertEqual(o.length,n.scope.checkableItems.length,"The number of menu bar select events did not match expectations");f.forEach(o,function(q,p){n.scope.alfLog("log","Expected: ",q," Actual: ",n.scope.checkableItems[p]);l.assertEqual(q.label,n.scope.checkableItems[p].label,"Unexpected menu bar select label")});l.assertEqual("Select Item 2",n.scope.testObjects.MENU_BAR_SELECT.get("label"),"The menu bar select label was not updated correctly (with item label)");l.assertEqual("Alpha",n.scope.testObjects.MENU_BAR_SELECT_VALUE.get("label"),"The menu bar select label was not updated correctly (with item value)")}),900);return m},testMenuBarToggle:function(l){var m=new l.Deferred();var n=this;this.scope.toggledItems=[];this.scope.alfSubscribe("CLICK",function(o){n.scope.alfLog("log","Received menu bar toggle event",o);n.scope.toggledItems.push({clicked:o.clicked,value:o.value})});l.assertEqual("High",n.scope.testObjects.MENU_BAR_TOGGLE_CUSTOM_LABEL.get("label"),"The menu bar select label was not updated correctly (with item label)");l.assertEqual("Down",n.scope.testObjects.MENU_BAR_TOGGLE_WITH_ICON.get("label"),"The menu bar select label was not updated correctly (with item value)");j.mouseMoveAt(this.scope.testObjects.MENU_BAR_TOGGLE_CUSTOM_LABEL.domNode,200);j.mouseClick({left:true},200);j.mouseMoveAt(this.scope.testObjects.MENU_BAR_TOGGLE_WITH_ICON.domNode,200);j.mouseClick({left:true},200);j.mouseMoveAt(this.scope.testObjects.MENU_BAR_TOGGLE_CUSTOM_LABEL.domNode,200);j.mouseClick({left:true},200);j.mouseMoveAt(this.scope.testObjects.MENU_BAR_TOGGLE_WITH_ICON.domNode,200);j.mouseClick({left:true},200);j.sequence(m.getTestCallback(function(){var o=[{clicked:"TOGGLE_WITH_LABEL",value:"OFF"},{clicked:"TOGGLE_WITH_ICON",value:"ON"},{clicked:"TOGGLE_WITH_LABEL",value:"ON"},{clicked:"TOGGLE_WITH_ICON",value:"OFF"}];l.assertEqual(o.length,n.scope.toggledItems.length,"The number of menu bar select events did not match expectations");f.forEach(o,function(q,p){n.scope.alfLog("log","Expected: ",q," Actual: ",n.scope.toggledItems[p]);l.assertEqual(q.label,n.scope.toggledItems[p].label,"Unexpected menu bar select label")});l.assertEqual("High",n.scope.testObjects.MENU_BAR_TOGGLE_CUSTOM_LABEL.get("label"),"The menu bar select label was not updated correctly (with item label)");l.assertEqual("Down",n.scope.testObjects.MENU_BAR_TOGGLE_WITH_ICON.get("label"),"The menu bar select label was not updated correctly (with item value)")}),900);return m}})});