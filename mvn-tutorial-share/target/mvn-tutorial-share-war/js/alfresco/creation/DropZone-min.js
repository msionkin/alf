define(["dojo/_base/declare","dijit/_WidgetBase","dijit/_TemplatedMixin","dojo/text!./templates/DropAndPreview.html","alfresco/core/Core","dojo/_base/lang","dojo/_base/array","dijit/registry","dojo/dnd/Source","dojo/dnd/Target","dojo/dom-construct","dojo/dom-class","dojo/aspect","alfresco/creation/DropZoneWrapper","dojo/on"],function(x,n,i,y,o,z,g,h,q,w,f,j,r,d,k){return x([n,i,o],{cssRequirements:[{cssFile:"./css/DropAndPreview.css"}],i18nRequirements:[{i18nFile:"./i18n/DropAndPreview.properties"}],templateString:y,horizontal:false,previewTarget:null,initialItems:null,postCreate:function b(){this.previewTarget=new q(this.previewNode,{accept:["widget"],creator:z.hitch(this,"creator"),withHandles:true,horizontal:this.horizontal});r.after(this.previewTarget,"onMouseDown",z.hitch(this,"onWidgetSelected"),true);r.after(this.previewTarget,"onDrop",z.hitch(this,"emitOnWidgetUpdate"),true);r.after(this.previewTarget,"insertNodes",z.hitch(this,"publishAvailableFields"),true);this.alfSubscribe("ALF_UPDATE_RENDERED_WIDGET",z.hitch(this,"updateItem"));this.alfSubscribe("ALF_REQUEST_AVAILABLE_FORM_FIELDS",z.hitch(this,"publishAvailableFields"));k(this.previewNode,"onWidgetDelete",z.hitch(this,"deleteItem"));k(this.previewNode,"onWidgetUpdate",z.hitch(this,"updateWidgetsForDisplay"));if(this.initialItems!=null){this.previewTarget.insertNodes(false,this.initialItems,false,null)}},updateWidgetsForDisplay:function m(A){this.alfLog("log","A nested widget has been added",A);if(A.widgetWrapperNode!=null&&A.widgetWrapperItems!=null){var B=this.previewTarget.getItem(A.widgetWrapperNode.id);if(B!=null){A.widgetsForDisplay[0].config.initialItems=A.widgetWrapperItems;B.data.widgetsForDisplay=A.widgetsForDisplay;A.stopPropagation();A.preventDefault();this.emitOnWidgetUpdate()}}},getAvailableFields:function v(){var D=[];for(var B in this.previewTarget.map){var C=this.previewTarget.map[B];var E=z.getObject("defaultConfig.name",false,C),A=z.getObject("defaultConfig.fieldId",false,C);D.push({label:E,value:A})}return D},getWidgetDefinitions:function t(){var A=[];g.forEach(this.previewTarget.getAllNodes(),function(F,D){var E=this.previewTarget.getItem(F.id);var C={name:E.data.module,config:E.data.defaultConfig,widgetsForDisplay:E.data.widgetsForDisplay};z.mixin(C,E.data.additionalConfig);var G=h.byNode(F);if(G!=null&&typeof G.getWidgetDefinitions==="function"){var B=G.getWidgetDefinitions();z.setObject("config.widgets",B,C)}A.push(C)},this);return A},getCurrentItems:function l(){var A=[];g.forEach(this.previewTarget.getAllNodes(),function(C,B){A.push(this.previewTarget.getItem(C.id))},this);return A},publishAvailableFields:function e(){var A={};A.options=this.getAvailableFields();this.alfLog("log","Publishing available fields:",A,this);this.alfPublish("ALF_FORM_FIELDS_UPDATE",A)},deleteItem:function s(A){this.alfLog("log","Delete widget request detected",A);if(A.target!=null&&A.target.id!=null&&this.previewTarget.getItem(A.target.id)!=null&&A.widgetToDelete!=null){A.widgetToDelete.destroyRecursive(false);this.previewTarget.delItem(A.target.id);if(this.previewTarget.getAllNodes().length==0){j.remove(this.previewNode,"containsItems")}this.alfPublish("ALF_CLEAR_CONFIGURE_WIDGET",{});this.emitOnWidgetUpdate();this.publishAvailableFields()}},updateItem:function c(F){if(F.node!=null){var D=g.some(this.previewTarget.getAllNodes(),function(H,G){return F.node.id==H.id});if(D==true){this.alfLog("log","Updating item",F);var C=z.clone(F.originalConfig);for(var B in F.updatedConfig){z.setObject(B,F.updatedConfig[B],C)}for(var A=0;A<C.widgetsForConfig.length;A++){C.widgetsForConfig[A].config.value=F.updatedConfig[C.widgetsForConfig[A].config.name]}g.forEach(this.previewTarget.getSelectedNodes(),function(H,G){var I=h.byNode(H);if(I){I.destroyRecursive(true)}},this);try{this.previewTarget.insertNodes(false,[C],true,F.node)}catch(E){this.alfLog("log","Error",E)}finally{this.alfLog("log","Finally")}this.previewTarget.deleteSelectedNodes();this.emitOnWidgetUpdate();this.publishAvailableFields()}}},creator:function u(E,G){this.alfLog("log","Creating",E,G);var D=f.create("div");if(E.module!=null&&E.module!=""){var F=z.clone(E);var A=(F.defaultConfig!=null)?F.defaultConfig:{};if(A.fieldId===undefined){A.fieldId=this.generateUuid()}var C;if(E.previewWidget==true||E.widgetsForDisplay==null||E.widgetsForDisplay.length==0){C=[{name:E.module,config:A}]}else{C=E.widgetsForDisplay}if(this.widgetsForNestedConfig!=null){if(E.originalConfigWidgets===undefined){F.originalConfigWidgets=z.clone(E.widgetsForConfig)}F.widgetsForConfig=F.originalConfigWidgets.concat(z.clone(this.widgetsForNestedConfig));g.forEach(F.widgetsForConfig,function(J,I){var H=z.getObject(J.config.name,false,F);if(H!=null){J.config.value=H}},this)}var B=new d({pubSubScope:this.pubSubScope,widgets:C,moduleName:E.name,},D);this.alfSetData(A.fieldId+".name",F.defaultConfig.name+"")}else{this.alfLog("log","The requested item to create was missing a 'module' attribute",E,this)}j.add(this.previewNode,"containsItems");return{node:B.domNode,data:F,type:["widget"]}},onWidgetSelected:function a(C){var D=this.previewTarget.getSelectedNodes();if(D.length>0&&D[0]!=null){var A=this.previewTarget.getItem(D[0].id);this.alfLog("log","Widget selected",A);var B={selectedNode:D[0],selectedItem:A.data};this.alfPublish("ALF_CONFIGURE_WIDGET",B)}},emitOnWidgetUpdate:function p(){this.alfLog("log","Widgets updated");k.emit(this.domNode,"onWidgetUpdate",{bubbles:true,cancelable:true,widgetsForDisplay:[{name:"alfresco/creation/DropZone",config:{horizontal:this.horizontal}}]})}})});