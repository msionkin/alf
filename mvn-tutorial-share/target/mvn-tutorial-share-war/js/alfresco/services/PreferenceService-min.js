define(["dojo/_base/declare","alfresco/core/Core","alfresco/core/CoreXhr","alfresco/services/_PreferenceServiceTopicMixin","alfresco/documentlibrary/_AlfDocumentListTopicMixin","dojo/_base/lang"],function(q,j,g,c,b,s){return q([j,g,c,b],{nonAmdDependencies:["/js/alfresco.js"],_wrappedService:null,constructor:function r(t){s.mixin(this,t);if(Alfresco&&Alfresco.service&&typeof Alfresco.service.Preferences==="function"){this._wrappedService=new Alfresco.service.Preferences();this.alfSubscribe(this.getPreferenceTopic,s.hitch(this,"getPreference"));this.alfSubscribe(this.setPreferenceTopic,s.hitch(this,"setPreference"));this.alfSubscribe(this.showFoldersTopic,s.hitch(this,"onShowFolders"));this.alfSubscribe(this.showPathTopic,s.hitch(this,"onShowPath"));this.alfSubscribe(this.showSidebarTopic,s.hitch(this,"onShowSidebar"));this.alfSubscribe(this.viewSelectionTopic,s.hitch(this,"onViewSelection"));this.alfSubscribe(this.addFavouriteDocumentTopic,s.hitch(this,"onAddFavouriteDocument"));this.alfSubscribe(this.removeFavouriteDocumentTopic,s.hitch(this,"onRemoveFavouriteDocument"))}},localPreferences:null,getPreference:function k(t){if(!s.exists("callback",t)||typeof t.callback!=="function"||!s.exists("callbackScope",t)){this.alfLog("warn","A request was made to get a preference, but the callback information was missing",t)}else{if(!s.exists("preference",t)){this.alfLog("warn","A request was made to get a preference, but no 'preference' attribute was provided",t)}else{t.callback.apply(t.callbackScope,[s.getObject(t.preference,false,this.localPreferences)])}}},setPreference:function n(v){if(!s.exists("preference",v)){this.alfLog("warn","A request was made to set a preference, but no 'preference' attribute was provided",v)}else{if(!s.exists("value",v)){this.alfLog("warn","A request was made to set a preference, but no 'value' attribute was provided",v)}else{if(s.getObject(v.preference,false,this.localPreferences)==v.value){this.alfLog("log","Intentionally not saving a preference that hasn't changed")}else{var w=this,u=Alfresco.constants.PROXY_URI+"api/people/"+encodeURIComponent(Alfresco.constants.USERNAME)+"/preferences";var t={};s.setObject(v.preference,v.value,t);this.serviceXhr({url:u,data:t,method:"POST"});s.setObject(v.preference,v.value,this.localPreferences)}}}},onShowFolders:function e(t){if(t&&t.selected!=null){this.setPreference({preference:"org.alfresco.share.documentList.showFolders",value:t.selected})}},onShowPath:function l(t){if(t&&t.selected!=null){this.setPreference({preference:"org.alfresco.share.documentList.hideNavBar",value:!t.selected})}},onShowSidebar:function h(t){if(t&&t.selected!=null){this.setPreference({preference:"org.alfresco.share.documentList.showSidebar",value:t.selected})}},onViewSelection:function a(t){if(t&&t.value!=null){this.setPreference({preference:"org.alfresco.share.documentList.viewRendererName",value:t.value})}},onAddFavouriteDocument:function i(u){if(u!=null&&u.node!=null&&u.node.jsNode!=null){var t={successCallback:{fn:this.onAddFavouriteDocumentSuccess,scope:this,obj:u},failureCallback:{fn:this.onAddFavouriteDocumentFailure,scope:this,obj:u}};var v=u.node.jsNode.isContainer?Alfresco.service.Preferences.FAVOURITE_FOLDERS:Alfresco.service.Preferences.FAVOURITE_DOCUMENTS;this._wrappedService.add(v,u.node.jsNode.nodeRef.nodeRef,t)}},onRemoveFavouriteDocument:function d(u){if(u!=null&&u.node!=null&&u.node.jsNode!=null){var t={successCallback:{fn:this.onRemoveFavouriteDocumentSuccess,scope:this,obj:u},failureCallback:{fn:this.onRemoveFavouriteDocumentFailure,scope:this,obj:u}};var v=u.node.jsNode.isContainer?Alfresco.service.Preferences.FAVOURITE_FOLDERS:Alfresco.service.Preferences.FAVOURITE_DOCUMENTS;this._wrappedService.remove(v,u.node.jsNode.nodeRef.nodeRef,t)}},onAddFavouriteDocumentSuccess:function m(u,t){this.alfLog("log","Successfully favourited a document",u,t);this.alfPublish(this.addFavouriteDocumentSuccessTopic,{response:u,requestConfig:t})},onAddFavouriteDocumentFailure:function o(u,t){this.alfLog("error","Failed to favourite a document",u,t);this.alfPublish(this.addFavouriteDocumentFailureTopic,{response:u,requestConfig:t})},onRemoveFavouriteDocumentSuccess:function f(u,t){this.alfLog("log","Successfully removed a document favourite",u,t);this.alfPublish(this.removeFavouriteDocumentSuccessTopic,{response:u,requestConfig:t})},onRemoveFavouriteDocumentFailure:function p(u,t){this.alfLog("error","Failed to remove a document favourite",u,t);this.alfPublish(this.removeFavouriteDocumentFailureTopic,{response:u,requestConfig:t})}})});