define(["dojo/_base/declare","dijit/_WidgetBase","dijit/_TemplatedMixin","dijit/_KeyNavContainer","dojo/text!./templates/AlfDocumentListView.html","alfresco/documentlibrary/views/layouts/_MultiItemRendererMixin","alfresco/documentlibrary/_AlfDndDocumentUploadMixin","alfresco/core/Core","dojo/_base/lang","dojo/_base/array","dojo/keys","dojo/dom-construct","dojo/dom-class","dijit/registry"],function(w,c,s,e,x,y,m,n,z,j,p,h,l,k){return w([c,s,e,y,n,m],{i18nRequirements:[{i18nFile:"./i18n/AlfDocumentListView.properties"}],cssRequirements:[{cssFile:"./css/AlfDocumentListView.css"}],templateString:x,widgets:null,postCreate:function g(){this.inherited(arguments);this.addUploadDragAndDrop(this.domNode);this.setupKeyboardNavigation();this.alfSubscribe(this.filterChangeTopic,z.hitch(this,"onFilterChange"));this.alfSubscribe("ALF_RETRIEVE_DOCUMENTS_REQUEST_SUCCESS",z.hitch(this,"onDocumentsLoaded"))},onDocumentsLoaded:function q(C){var A=z.getObject("payload.requestConfig.filter.filterId",false,C);if(A=="path"){this.addUploadDragAndDrop(this.domNode)}else{this.removeUploadDragAndDrop(this.domNode)}for(var B=0;B<C.response.items.length;B++){C.response.items[B].jsNode=new Alfresco.util.Node(C.response.items[B].node)}this.setData(C.response);this.renderView()},onFilterChange:function t(A){if(A!=null&&A.filterId=="path"){this.addUploadDragAndDrop(this.domNode)}else{this.removeUploadDragAndDrop(this.domNode)}},setupKeyboardNavigation:function v(){this.connectKeyNavHandlers([p.UP_ARROW],[p.DOWN_ARROW])},_onChildBlur:function f(A){if(typeof A.blur==="function"){A.blur()}},viewSelectionConfig:null,getViewName:function u(){return null},getViewSelectionConfig:function d(){return this.viewSelectionConfig},getAdditionalControls:function o(){return[]},renderView:function i(){if(this.containerNode!=null){j.forEach(k.findWidgets(this.containerNode),z.hitch(this,"destroyWidget"));h.empty(this.containerNode)}if(this.currentData&&this.currentData.items&&this.currentData.items.length>0){this.renderData()}else{this.renderNoDataDisplay()}},destroyWidget:function b(B,A){if(typeof B.destroyRecursive==="function"){B.destroyRecursive()}},onViewShown:function r(){},renderNoDataDisplay:function a(){h.empty(this.containerNode);h.create("div",{innerHTML:this.message("doclistview.no.data.message")},this.containerNode)}})});