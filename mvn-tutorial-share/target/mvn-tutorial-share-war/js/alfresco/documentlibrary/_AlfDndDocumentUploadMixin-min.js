define(["dojo/_base/declare","alfresco/core/Core","alfresco/documentlibrary/_AlfDocumentListTopicMixin","alfresco/core/PathUtils","dojo/_base/lang","dojo/_base/array","dojo/mouse","dojo/on","dijit/registry","dojo/dom-class","dojo/dom","dojo/_base/window"],function(w,n,b,f,z,g,m,j,h,i,s,d){return w([n,b,f],{dndUploadEnabled:false,dndUploadCapable:false,constructor:function k(){this.dndUploadCapable=("draggable" in document.createElement("span"))&&YAHOO.env.ua.mobile===null},removeUploadDragAndDrop:function t(A){this.alfLog("log","Removing drag and drop upload handlers");if(this.dndUploadEventHandlers!=null){g.forEach(this.dndUploadEventHandlers,function(B){B.remove()})}this.dndUploadEventHandlers=[]},dragAndDropNode:null,dndUploadEventHandlers:null,addUploadDragAndDrop:function r(B){if(this.dndUploadCapable){this.alfLog("log","Adding DND upload capabilities",this);try{this.dndUploadEnabled=true;this.dragAndDropNode=B;if(this.dndUploadEventHandlers!=null){g.forEach(this.dndUploadEventHandlers,function(C){C.remove()})}this.dndUploadEventHandlers=[];this.dndUploadEventHandlers.push(j(d.body(),"dragenter",z.hitch(this,"onDndUploadDragEnter")));this.dndUploadEventHandlers.push(j(this.dragAndDropNode,"dragover",z.hitch(this,"onDndUploadDragOver")));this.dndUploadEventHandlers.push(j(this.dragAndDropNode,"drop",z.hitch(this,"onDndUploadDrop")));this.alfLog("log","Handlers: ",this.dndUploadEventHandlers)}catch(A){this.alfLog("error","The following exception occurred adding Drag and Drop event handlers: ",A)}}else{this.alfLog("log","Cannot add DND upload capabilities because the browser does not have the required capabilities",this)}},swallowDragStart:function p(A){A.stopPropagation();A.preventDefault()},swallowDragEnter:function c(A){A.stopPropagation();A.preventDefault()},swallowDragOver:function o(A){A.dataTransfer.dropEffect="none";A.stopPropagation();A.preventDefault()},swallowDrop:function q(A){this.alfLog("log","Swallowing drop");A.stopPropagation();A.preventDefault()},onDndUploadDragEnter:function e(A){if(s.isDescendant(A.target,this.dragAndDropNode)&&this.checkApplicable(A.target,"onDndUploadDragEnter")){this.alfLog("log","Adding DND highlight",this);this.addDndHighlight()}else{this.alfLog("log","Removing DND highlight",this);this.removeDndHighlight()}},onDndUploadDragOver:function l(A){A.stopPropagation();A.preventDefault()},addDndHighlight:function v(){if(this.domNode!=null){i.add(this.domNode,"dndHighlight")}},removeDndHighlight:function v(){if(this.domNode!=null){i.remove(this.domNode,"dndHighlight")}},checkApplicable:function a(B,D){var A=false;var C=h.getEnclosingWidget(B);if(C==null){this.alfLog("log","No widget found - unexpected behaviour: ",this)}else{if(C!=this&&typeof C[D]==="function"&&C.dndUploadEnabled!=null&&C.dndUploadEnabled===true){this.alfLog("log","This event does NOT relate to me: ",this)}else{this.alfLog("log","This event relates to me: ",this);A=true}}return A},onDndUploadDrop:function x(G){try{this.alfLog("log","Upload drop detected",G);if(G.dataTransfer.files!==undefined&&G.dataTransfer.files!==null&&G.dataTransfer.files.length>0){var F=Alfresco.getDNDUploadProgressInstance();var A=false;var H="",E,C;C=G.dataTransfer.files.length;for(E=0;E<C;E++){if(G.dataTransfer.files[E].size>0){A=true}else{H+='"'+G.dataTransfer.files[E].fileName+'", '}}if(!A){H=H.substring(0,H.lastIndexOf(", "));Alfresco.util.PopupManager.displayMessage({text:F.msg("message.zeroByteFiles",H)})}if(A&&F.uploadMethod===F.INMEMORY_UPLOAD){var J=0;C=G.dataTransfer.files.length;for(E=0;E<C;E++){J+=G.dataTransfer.files[E].size}if(J>F.getInMemoryLimit()){A=false;Alfresco.util.PopupManager.displayPrompt({text:F.msg("inmemory.uploadsize.exceeded",Alfresco.util.formatFileSize(F.getInMemoryLimit()))})}}if(A){var I=this.getUploadConfig();this.removeDndHighlight();var D={files:G.dataTransfer.files,filter:[],mode:F.MODE_MULTI_UPLOAD,thumbnails:"doclib",onFileUploadComplete:{fn:this.onFileUploadComplete,scope:this}};z.mixin(D,I);F.show(D)}}else{this.alfLog("error","A drop event was detected, but no files were present for upload: ",G.dataTransfer)}}catch(B){this.alfLog("error","The following error occurred when files were dropped onto the Document List: ",B)}this.removeDndHighlight();G.stopPropagation();G.preventDefault()},getUploadConfig:function u(){var A=null;if(this.currentItem&&this.currentItem.jsNode&&this.currentItem.jsNode.isContainer){try{A={uploadDirectoryName:this.currentItem.location.file,uploadDirectory:this.combinePaths(location.path,location.file),destination:this.currentItem.nodeRef}}catch(B){this.alfLog("warn","Failed to generate upload configuration",B)}}else{if(this.currentData&&this.currentData.metadata&&this.currentData.metadata.parent&&this.currentData.metadata.parent.nodeRef){try{A={uploadDirectoryName:this.currentData.metadata.parent.properties["cm:name"],destination:this.currentData.metadata.parent.nodeRef}}catch(B){this.alfLog("warn","Failed to generate upload configuration",B)}}}return A},onFileUploadComplete:function y(){this.alfLog("log","Upload complete");this.alfPublish(this.reloadDataTopic,{})}})});